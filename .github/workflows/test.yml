name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: "9.2.0"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Corepack setup
        run: corepack enable
      - name: Install Deps
        run: |
          pnpm install --lockfile-only
          pnpm list
      - name: Ensure dist/ folder is up-to-date
        run: |
          pnpm build
          if [ "$(git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi

  create-minio-bucket:
    runs-on: ubuntu-latest
    steps:
      - run: |
          wget -q https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod a+x mc
          ./mc mb play/actions-cache || exit 0

  test-save:
    needs: create-minio-bucket
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate files in working directory
        shell: bash
        run: src/create-cache-files.sh ${{ runner.os }} test-cache
      - name: Generate files outside working directory
        shell: bash
        run: src/create-cache-files.sh ${{ runner.os }} ~/test-cache
      - name: Save cache
        uses: ./
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: Q3AM3UQ867SPQQA43P2F
          AWS_SECRET_ACCESS_KEY: zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
        with:
          endpoint: play.min.io
          bucket: actions-cache
          root: opendal
          use-fallback: false
          key: test/${{ runner.os }}/${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache

  test-restore:
    needs: test-save
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore cache
        uses: ./
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: Q3AM3UQ867SPQQA43P2F
          AWS_SECRET_ACCESS_KEY: zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
        with:
          endpoint: play.min.io
          bucket: actions-cache
          root: opendal
          use-fallback: false
          key: test/${{ runner.os }}/${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache
      - name: Verify cache files in working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} test-cache
      - name: Verify cache files outside working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} ~/test-cache

  test-restore-keys:
    needs: test-save
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore cache
        uses: ./
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: Q3AM3UQ867SPQQA43P2F
          AWS_SECRET_ACCESS_KEY: zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
        with:
          endpoint: play.min.io
          bucket: actions-cache
          root: opendal
          use-fallback: false
          key: test/${{ runner.os }}/${{ github.run_id }}/${{ github.sha }}
          path: |
            test-cache
            ~/test-cache
          restore-keys: test/${{ runner.os }}/
      - name: Verify cache files in working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} test-cache
      - name: Verify cache files outside working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} ~/test-cache
